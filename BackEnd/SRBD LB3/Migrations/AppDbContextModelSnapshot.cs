// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SRBD_LB3.Models;

#nullable disable

namespace SRBD_LB3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SRBD_LB3.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AuthorId")
                        .HasName("PK__Authors__70DAFC143CCCCD25");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("SRBD_LB3.Models.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FilmID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<int?>("WatchCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("FilmId")
                        .HasName("PK__Films__6D1D229C7A3A76E7");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Films", t =>
                        {
                            t.HasTrigger("tr_Films_InsertProtection");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("SRBD_LB3.Models.FilmCompany", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EstablishedYear")
                        .HasColumnType("int");

                    b.Property<string>("Indormation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CompanyId")
                        .HasName("PK__FilmComp__2D971C4C6414201A");

                    b.ToTable("FilmCompanies");
                });

            modelBuilder.Entity("SRBD_LB3.Models.FilmsLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<DateTime>("AttemptDate")
                        .HasColumnType("datetime")
                        .HasColumnName("attempt_date");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("error_message");

                    b.Property<string>("FilmName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("film_name");

                    b.HasKey("LogId")
                        .HasName("PK__FilmsLog__9E2397E0155C64F1");

                    b.ToTable("FilmsLogs");
                });

            modelBuilder.Entity("SRBD_LB3.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("FilmId")
                        .HasColumnType("int")
                        .HasColumnName("FilmID");

                    b.Property<DateTime?>("ScreeningDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Screenin__3214EC27552CA1EA");

                    b.HasIndex("FilmId");

                    b.ToTable("Screenings", t =>
                        {
                            t.HasTrigger("tr_Screening_CompanyDescription");

                            t.HasTrigger("tr_Screenings_InsertDate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("SRBD_LB3.Models.Film", b =>
                {
                    b.HasOne("SRBD_LB3.Models.Author", "Author")
                        .WithMany("Films")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK_Films_Authors");

                    b.HasOne("SRBD_LB3.Models.FilmCompany", "Company")
                        .WithMany("Films")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_Films_Companies");

                    b.Navigation("Author");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SRBD_LB3.Models.Screening", b =>
                {
                    b.HasOne("SRBD_LB3.Models.Film", "Film")
                        .WithMany("Screenings")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_Film");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("SRBD_LB3.Models.Author", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("SRBD_LB3.Models.Film", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("SRBD_LB3.Models.FilmCompany", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
